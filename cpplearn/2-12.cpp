/*
引用参数如果是普通引用，则需要左值。如果是只读引用则需要右值。
++a是一个左值表达式，a++是一个右值表达式。
此外所有的赋值运算、返回普通引用的函数调用以及通过指针访问普通对象等都是左值表达式。

*/

//下面定义一个整型函数实现++的后置运算
//通过示例说明
#include <iostream>
using namespace std;
int inc(int &x){return x++;}
int i=1,j;
char c=1;
int main(int argc, char const *argv[])
{
    //首先 inc函数的参数是一个整型普通对象的引用参数。
    //因此 需要传入的表达式为左值表达式，如果不是，则使用匿名变量转换。
    //然而实际上自己跑的时候会发现编译都不能过 如果将右值传入左值 则不会使用匿名变量 而是直接编译报错！
    
    j=inc(i); //i是一个整型的左值，所以满足要求，因此i被传入函数中
    //因此i能够带回结果 i=2,j=1 
    j=inc(++i);//++前置运算是一个左值表达式，所以该式子仍旧满足条件
    //i=4 j=3
    j=inc(i++);//++后置运算不是一个左值表达式，所以使用一个匿名int变量传入
    //temp = ibefore=4 j=temp++=4 i=5(i++)
    //最后 i=5 j=4 temp = 5（temp被销毁)
    j=inc(i+5);//i+5不可以出现在等号的左边，因此也是一个右值
    //temp = i+5 = 10 j=temp++
    //最后 i=5 j=10 temp=11（temp被销毁)
    
    return 0;
}
