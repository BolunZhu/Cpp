// 函数内联
// 使用 inline 声明或者定义
// 函数内联就是使得函数被调用的时候使用函数体替换每个调用 从而省去压栈等操作
// 对于经常调用而又较小的函数 可以使用函数内联来加速
// 内联函数中不能包含任何具有跳转功能的语句如分支、循环、函数调用等
// 否则会引起内联失败 这并不会导致致命错误，只是这时候会使用正常的函数调用而非替换函数体。
// 内联函数无论内联是否成功，其作用域都是static的函数 局部与当前的程序文件 不能被其他程序内文件访问。
// main函数相当于一个extern的全局main函数 因此不能内联 否则操作系统无法访问调用该函数。 main函数是一个特殊的不能被任何函数包括自身调用的函数
#include <iostream>
inline int abs(int i){
    return i>0?i:-i;
}
int main(int argc, char const *argv[])
{
    int m;
    std::cin >> m;
    std::cout<<abs(m);//此时abs是以函数调用的方式使用的而非内联 因为函数体里面存在条件语句
    return 0;
}
