// 如果函数的参数是非引用类型的 那么他的形参对象的析构是在函数返回前完成的。构造则是在函数调用的时候由值传递完成的。
// 值传递只是将各个数据成员的值赋给形参的数据成员。如果其中包含指针。那么形参和实参的这个指针指向的对象相同。
// 然而在函数返回的时候会调用形参的析构函数，从而释放掉指针指向的空间。这是我们所不期望发生的，但是往往发生。
// 这种复制称为浅拷贝。
// 因此为了避免这种情况我们应该将参数定义为类或者类的引用的深拷贝函数来保证不出现问题。

